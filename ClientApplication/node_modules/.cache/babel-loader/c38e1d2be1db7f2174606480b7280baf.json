{"ast":null,"code":"var _jsxFileName = \"D:\\\\vitus\\\\Documents\\\\Szakdolgozat\\\\AuctionApplication\\\\ClientApplication\\\\src\\\\User\\\\PasswordRecover.tsx\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\nimport { useAuth } from \"../Services/AuthService\";\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport authHeader from \"../Services/TokenService\";\nimport userId from '../Services/UserService';\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [password2, setPassword2] = useState(\"\");\n  const [password3, setPassword3] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    setAuthTokens\n  } = useAuth();\n  const [beforeverification, setBeforeVerification] = useState(true);\n  const [beforelogin, setBeforeLogin] = useState(true);\n  const [beforereset, setBeforeReset] = useState(true);\n\n  function sendVerification() {\n    axios.post(\"https://localhost:5001/api/users/forgotpassword\", {\n      \"email\": email\n    }).then(result => {\n      setBeforeVerification(false);\n    }).catch(e => {});\n  }\n\n  function login() {\n    axios.post(\"https://localhost:5001/api/users/authenticate\", {\n      \"email\": email,\n      \"password\": password\n    }).then(result => {\n      setAuthTokens(result.data);\n      setBeforeLogin(false);\n    }).catch(e => {\n      setIsError(true);\n      setError(e.response.data.message);\n    });\n  }\n\n  function resetPassword() {\n    axios.put(\"https://localhost:5001/api/users/\" + userId().id, {\n      \"email\": email,\n      \"password\": password2\n    }, {\n      headers: authHeader()\n    }).then(result => {}).catch(e => {});\n  }\n\n  if (beforeverification) return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Card, {\n    className: \"shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Form, {\n    validated: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Form.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Please enter your email address. We will send a verification code for you in an email\"), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Form.Control, {\n    type: \"email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.currentTarget.value);\n    },\n    placeholder: \"example@email.com\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: sendVerification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Send code\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }));\n  if (beforelogin) return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(Card, {\n    className: \"shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Form, {\n    validated: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Form.Control, {\n    type: \"email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.currentTarget.value);\n    },\n    placeholder: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Code from email: \"), React.createElement(Form.Control, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.currentTarget.value);\n    },\n    placeholder: \"code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Form.Text, {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, error)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \"Send\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }));\n  if (beforereset) return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(Card, {\n    className: \"shadow\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Form, {\n    validated: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Email:\"), React.createElement(Form.Control, {\n    type: \"email\",\n    value: email,\n    onChange: e => {\n      setEmail(e.currentTarget.value);\n    },\n    placeholder: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Password: \"), React.createElement(Form.Control, {\n    type: \"password\",\n    value: password2,\n    onChange: e => {\n      setPassword2(e.currentTarget.value);\n    },\n    placeholder: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Password again:\"), React.createElement(Form.Control, {\n    type: \"password\",\n    value: password3,\n    onChange: e => {\n      setPassword3(e.currentTarget.value);\n    },\n    placeholder: \"password again\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  })), isError && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Form.Text, {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, error)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: resetPassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Reset password\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }));else return React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Password reset success!\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  })), React.createElement(Col, {\n    xs: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["D:/vitus/Documents/Szakdolgozat/AuctionApplication/ClientApplication/src/User/PasswordRecover.tsx"],"names":["React","useState","axios","useAuth","Form","Button","Row","Col","Card","authHeader","userId","Login","email","setEmail","password","setPassword","password2","setPassword2","password3","setPassword3","isError","setIsError","error","setError","setAuthTokens","beforeverification","setBeforeVerification","beforelogin","setBeforeLogin","beforereset","setBeforeReset","sendVerification","post","then","result","catch","e","login","data","response","message","resetPassword","put","id","headers","currentTarget","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAQC,MAAR,MAAqB,yBAArB;AAGA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,SAAD,EAAYC,YAAZ,IAA4BlB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAO;AAAEuB,IAAAA;AAAF,MAAqBrB,OAAO,EAAnC;AACA,QAAM,CAACsB,kBAAD,EAAqBC,qBAArB,IAA8CzB,QAAQ,CAAC,IAAD,CAA5D;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC,IAAD,CAA9C;;AAIA,WAAS8B,gBAAT,GAA2B;AACvB7B,IAAAA,KAAK,CAAC8B,IAAN,CAAW,iDAAX,EAA8D;AAC1D,eAASpB;AADiD,KAA9D,EAEKqB,IAFL,CAEUC,MAAM,IAAI;AACbR,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACF,KAJL,EAIOS,KAJP,CAIaC,CAAC,IAAI,CAEb,CANL;AAOH;;AAED,WAASC,KAAT,GAAgB;AACZnC,IAAAA,KAAK,CAAC8B,IAAN,CAAW,+CAAX,EAA4D;AACxD,eAASpB,KAD+C;AAExD,kBAAYE;AAF4C,KAA5D,EAGKmB,IAHL,CAGUC,MAAM,IAAI;AACbV,MAAAA,aAAa,CAACU,MAAM,CAACI,IAAR,CAAb;AACCV,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KANL,EAMOO,KANP,CAMaC,CAAC,IAAI;AACZf,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ,CAACa,CAAC,CAACG,QAAF,CAAWD,IAAX,CAAgBE,OAAjB,CAAR;AACD,KATL;AAUH;;AAED,WAASC,aAAT,GAAwB;AACtBvC,IAAAA,KAAK,CAACwC,GAAN,CAAU,sCAAoChC,MAAM,GAAGiC,EAAvD,EAA2D;AACzD,eAAS/B,KADgD;AAEzD,kBAAYI;AAF6C,KAA3D,EAGE;AAAE4B,MAAAA,OAAO,EAAEnC,UAAU;AAArB,KAHF,EAG6BwB,IAH7B,CAGkCC,MAAM,IAAI,CAEzC,CALH,EAKKC,KALL,CAKWC,CAAC,IAAI,CAEb,CAPH;AAQD;;AAED,MAAGX,kBAAH,EACE,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACO,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP,EAGO,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAEK,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FADJ,EAEI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,OADN;AAEE,IAAA,KAAK,EAAEb,KAFT;AAGG,IAAA,QAAQ,EAAGwB,CAAD,IAA4C;AACvDvB,MAAAA,QAAQ,CAACuB,CAAC,CAACS,aAAF,CAAgBC,KAAjB,CAAR;AACA,KALF;AAMC,IAAA,WAAW,EAAC,mBANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAcI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEf,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdJ,CAFJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CAFL,CAHP,EA0BQ,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BR,CADF;AA+BA,MAAGJ,WAAH,EACA,OACM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAGG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAEK,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,OADN;AAEE,IAAA,KAAK,EAAEf,KAFT;AAGG,IAAA,QAAQ,EAAGwB,CAAD,IAA4C;AACvDvB,MAAAA,QAAQ,CAACuB,CAAC,CAACS,aAAF,CAAgBC,KAAjB,CAAR;AACA,KALF;AAMC,IAAA,WAAW,EAAElC,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAaI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEK,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEC,IAAA,KAAK,EAAEE,QAFR;AAGE,IAAA,QAAQ,EAAGsB,CAAD,IAA4C;AACtDrB,MAAAA,WAAW,CAACqB,CAAC,CAACS,aAAF,CAAgBC,KAAjB,CAAX;AACC,KALH;AAMC,IAAA,WAAW,EAAC,MANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,CAbJ,EAyBK1B,OAAO,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCE,KAApC,CADF,CA1BZ,EA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9BJ,EA+BI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEe,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA/BJ,CADJ,EAkCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCJ,CAFL,CAHH,EA0CI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CJ,CADN;AA+CA,MAAGR,WAAH,EACA,OACM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,EAGG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAEK,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACC,IAAA,IAAI,EAAC,OADN;AAEE,IAAA,KAAK,EAAEjB,KAFT;AAGG,IAAA,QAAQ,EAAGwB,CAAD,IAA4C;AACvDvB,MAAAA,QAAQ,CAACuB,CAAC,CAACS,aAAF,CAAgBC,KAAjB,CAAR;AACA,KALF;AAMC,IAAA,WAAW,EAAElC,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAYI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEK,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAEI,SAFT;AAGE,IAAA,QAAQ,EAAGoB,CAAD,IAA4C;AACtDnB,MAAAA,YAAY,CAACmB,CAAC,CAACS,aAAF,CAAgBC,KAAjB,CAAZ;AACC,KALH;AAMC,IAAA,WAAW,EAAC,UANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,CAZJ,EAuBI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADN,EAEM,oBAAC,IAAD,CAAM,OAAN;AACA,IAAA,IAAI,EAAC,UADL;AAEA,IAAA,KAAK,EAAE5B,SAFP;AAGA,IAAA,QAAQ,EAAGkB,CAAD,IAA4C;AACtDjB,MAAAA,YAAY,CAACiB,CAAC,CAACS,aAAF,CAAgBC,KAAjB,CAAZ;AACD,KALC;AAMD,IAAA,WAAW,EAAC,gBANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CAvBJ,EAkCK1B,OAAO,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCE,KAApC,CADF,CAnCZ,EAuCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvCJ,EAwCI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEmB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAxCJ,CADJ,EA2CI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,CAFL,CAHH,EAmDI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnDJ,CADN,CADA,KA0DA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFL,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAHA,EAQC,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADF;AAaD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport { useAuth } from \"../Services/AuthService\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport AccountPic from '../Outlook/Images/greyuser.png';\r\nimport authHeader from \"../Services/TokenService\";\r\nimport  userId  from '../Services/UserService';\r\n\r\n\r\nexport default function Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [password3, setPassword3] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const  { setAuthTokens }  = useAuth();\r\n    const [beforeverification, setBeforeVerification] = useState(true);\r\n    const [beforelogin, setBeforeLogin] = useState(true);\r\n    const [beforereset, setBeforeReset] = useState(true);\r\n\r\n\r\n\r\n    function sendVerification(){\r\n        axios.post(\"https://localhost:5001/api/users/forgotpassword\", {\r\n            \"email\": email\r\n          }).then(result => {\r\n               setBeforeVerification(false);\r\n            }).catch(e => {\r\n             \r\n            });\r\n    }\r\n    \r\n    function login(){\r\n        axios.post(\"https://localhost:5001/api/users/authenticate\", {\r\n            \"email\": email,\r\n            \"password\": password\r\n          }).then(result => {\r\n               setAuthTokens(result.data);\r\n                setBeforeLogin(false);\r\n            }).catch(e => {\r\n              setIsError(true);  \r\n              setError(e.response.data.message); \r\n            });\r\n    }\r\n\r\n    function resetPassword(){\r\n      axios.put(\"https://localhost:5001/api/users/\"+userId().id, {\r\n        \"email\": email,\r\n        \"password\": password2\r\n      },{ headers: authHeader() }).then(result => {\r\n           \r\n        }).catch(e => {\r\n         \r\n        });\r\n    }\r\n    \r\n    if(beforeverification)\r\n      return (\r\n        <Row>\r\n               <Col xs={4}>\r\n               </Col>\r\n               <Col xs={4}>\r\n                    <br/>\r\n                    <Card className=\"shadow\">   \r\n                        \r\n                        <Form validated={true}>\r\n                            <Form.Text>Please enter your email address. We will send a verification code for you in an email</Form.Text>\r\n                            <Form.Group>\r\n                                <Form.Label>Email:</Form.Label>\r\n                                <Form.Control\r\n                                 type=\"email\"\r\n                                  value={email}\r\n                                   onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                  setEmail(e.currentTarget.value);\r\n                                 }}\r\n                                 placeholder=\"example@email.com\"\r\n                                 />\r\n                            </Form.Group>\r\n                            <br/>\r\n                            <Button onClick={sendVerification}>Send code</Button>\r\n                        </Form>\r\n                        <br/>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={4}>\r\n                </Col>\r\n          </Row>   \r\n      );\r\n      if(beforelogin)\r\n      return(\r\n            <Row>\r\n               <Col xs={4}>\r\n               </Col>\r\n               <Col xs={4}>\r\n                    <br/>\r\n                    <Card className=\"shadow\">   \r\n                        <Form validated={true}>\r\n                            <Form.Group>\r\n                                <Form.Label>Email:</Form.Label>\r\n                                <Form.Control\r\n                                 type=\"email\"\r\n                                  value={email}\r\n                                   onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                  setEmail(e.currentTarget.value);\r\n                                 }}\r\n                                 placeholder={email}\r\n                                 />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label>Code from email: </Form.Label>\r\n                                 <Form.Control\r\n                                   type=\"password\"\r\n                                  value={password}\r\n                                   onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                   setPassword(e.currentTarget.value);\r\n                                   }}\r\n                                  placeholder=\"code\"\r\n                                   />\r\n                            </Form.Group>\r\n\r\n                            {isError && \r\n                                    <div>\r\n                                      <Form.Text className=\"text-danger\">{error}</Form.Text>\r\n                                    </div>\r\n                            }\r\n                            <br/>\r\n                            <Button onClick={login}>Send</Button>\r\n                        </Form>\r\n                        <br/>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={4}>\r\n                </Col>\r\n          </Row>   \r\n      )\r\n      if(beforereset)\r\n      return(\r\n            <Row>\r\n               <Col xs={4}>\r\n               </Col>\r\n               <Col xs={4}>\r\n                    <br/>\r\n                    <Card className=\"shadow\">   \r\n                        <Form validated={true}>\r\n                            <Form.Group>\r\n                                <Form.Label>Email:</Form.Label>\r\n                                <Form.Control\r\n                                 type=\"email\"\r\n                                  value={email}\r\n                                   onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                  setEmail(e.currentTarget.value);\r\n                                 }}\r\n                                 placeholder={email}\r\n                                 />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Form.Label>Password: </Form.Label>\r\n                                 <Form.Control\r\n                                   type=\"password\"\r\n                                   value={password2}\r\n                                   onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                   setPassword2(e.currentTarget.value);\r\n                                   }}\r\n                                  placeholder=\"password\"\r\n                                   />\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                  <Form.Label>Password again:</Form.Label>\r\n                                  <Form.Control\r\n                                  type=\"password\"\r\n                                  value={password3}\r\n                                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                                  setPassword3(e.currentTarget.value);\r\n                                }}\r\n                                 placeholder=\"password again\"\r\n                                />\r\n                              </Form.Group>\r\n                            {isError && \r\n                                    <div>\r\n                                      <Form.Text className=\"text-danger\">{error}</Form.Text>\r\n                                    </div>\r\n                            }\r\n                            <br/>\r\n                            <Button onClick={resetPassword}>Reset password</Button>\r\n                        </Form>\r\n                        <br/>\r\n                    </Card>\r\n                </Col>\r\n                <Col xs={4}>\r\n                </Col>\r\n          </Row>   \r\n      )\r\n      else\r\n      return(\r\n        <Row>\r\n        <Col xs={4}>\r\n        </Col>\r\n        <Col xs={4}>\r\n             <br/>\r\n             <h1>Password reset success!</h1>\r\n            <br/>\r\n         </Col>\r\n         <Col xs={4}>\r\n         </Col>\r\n   </Row>   \r\n      )\r\n    }\r\n\r\n"]},"metadata":{},"sourceType":"module"}