{"ast":null,"code":"var _jsxFileName = \"D:\\\\vitus\\\\Documents\\\\Szakdolgozat\\\\AuctionApplication\\\\ClientApplication\\\\src\\\\Auctions\\\\Biding.tsx\";\nimport React from \"react\";\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport { useAuth } from \"../Services/AuthService\";\nimport authHeader from \"../Services/TokenService\";\nimport userId from '../Services/UserService';\nimport { stringFromDate } from '../Services/DateService';\nimport { connection } from '../Services/SignalRHubService';\nimport Form from 'react-bootstrap/Form';\nexport default function SendBid(props) {\n  const [sum, setSum] = useState(props.maxsum);\n  const [aucid, setId] = useState(props.id);\n  const {\n    authTokens\n  } = useAuth();\n  const userid = userId().id;\n  const username = userId().username;\n  const now = new Date();\n  var a = [];\n  const [data, setData] = useState(a);\n  const i = props.id;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [error, setError] = useState('');\n  const [hubConnection, setHubConnection] = useState(connection);\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n\n      try {\n        const res = await axios.get('https://localhost:5001/api/bid/' + i, {\n          headers: authHeader()\n        });\n        setData(res.data);\n      } catch (error) {\n        console.log(error);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const startConnection = async () => {\n      try {\n        await hubConnection.start();\n        console.log('Connection successful!');\n      } catch (err) {\n        console.log(err);\n      }\n\n      hubConnection.on('ReceiveSum', (id, sum, name, date) => {\n        setSum(sum);\n\n        if (id === i) {\n          var _document$getElementB;\n\n          var node = document.createElement(\"LI\");\n          node.innerHTML = \"<b>\" + sum + \" Ft</b> by \" + name + \" at \" + stringFromDate(date);\n          (_document$getElementB = document.getElementById(\"sumlist\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.appendChild(node);\n          console.log(\"receive\");\n        }\n      });\n    };\n\n    startConnection();\n    return () => {\n      hubConnection.off('ReceiveSum');\n      hubConnection.stop();\n    };\n  }, []);\n\n  const handleSubmit = async () => {\n    if (sum > props.maxsum) {\n      await axios.post('https://localhost:5001/api/bid', {\n        \"sum\": sum,\n        \"auctionid\": aucid,\n        \"personid\": userid,\n        \"personName\": username,\n        \"time\": now\n      }, {\n        headers: authHeader()\n      });\n      setIsError(false);\n    } else {\n      setIsError(true);\n      setError(\"Sum must be higher than actual price!\");\n    }\n  };\n\n  if (authTokens) return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    className: \"input-group-prepend text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Form.Control, {\n    className: \"form-control\",\n    type: \"number\",\n    value: sum,\n    onChange: e => {\n      setSum(+e.currentTarget.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), React.createElement(Form.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Ft\")), React.createElement(Button, {\n    className: \"btn\",\n    onClick: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Send bid\"), isError && React.createElement(Form.Text, {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, error))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"ul\", {\n    id: \"sumlist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, data.map(item => React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, item.sum, \" Ft\"), \" by \", item.personName, \" at \", stringFromDate(item.time)))));else {\n    return React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"You should \", React.createElement(\"a\", {\n      href: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"sign in\"), \" before you can bid\");\n  }\n}","map":{"version":3,"sources":["D:/vitus/Documents/Szakdolgozat/AuctionApplication/ClientApplication/src/Auctions/Biding.tsx"],"names":["React","useState","useEffect","axios","Button","Card","useAuth","authHeader","userId","stringFromDate","connection","Form","SendBid","props","sum","setSum","maxsum","aucid","setId","id","authTokens","userid","username","now","Date","a","data","setData","i","isLoading","setIsLoading","isError","setIsError","error","setError","hubConnection","setHubConnection","fetchData","res","get","headers","console","log","startConnection","start","err","on","name","date","node","document","createElement","innerHTML","getElementById","appendChild","off","stop","handleSubmit","post","e","currentTarget","value","map","item","personName","time"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { HubConnection, HubConnectionBuilder } from '@microsoft/signalr';\r\nimport axios from 'axios';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { useAuth } from \"../Services/AuthService\";\r\nimport Moment from 'react-moment';\r\nimport { Bid } from '../Common/Interfaces';\r\nimport authHeader from \"../Services/TokenService\";\r\nimport  userId  from '../Services/UserService';\r\nimport { stringFromDate } from '../Services/DateService';\r\nimport { connection } from '../Services/SignalRHubService';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { group } from \"console\";\r\n\r\ninterface IProps {\r\n    id : number;\r\n    maxsum : number;\r\n  }\r\n\r\n\r\n  export default function SendBid(props:IProps){\r\n    const [sum, setSum] = useState(props.maxsum);\r\n    const [aucid, setId] = useState(props.id);\r\n    const { authTokens } = useAuth();\r\n    const userid = userId().id;\r\n    const username = userId().username;\r\n    const now : Date = new Date();\r\n    var a: Bid[] = [];\r\n    const [data, setData] = useState(a);\r\n    const i:number =props.id;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [hubConnection, setHubConnection] = useState<HubConnection>(connection);\r\n\r\n\r\n    useEffect(() => {\r\n      const fetchData = async () => {\r\n        \r\n        setIsLoading(true);\r\n          try {\r\n                const res = await axios.get<Bid[]>('https://localhost:5001/api/bid/'+i, { headers: authHeader() });\r\n                setData(res.data); \r\n              }\r\n           catch (error) {  \r\n                console.log(error);\r\n              }\r\n          setIsLoading(false);\r\n      };\r\n      fetchData();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n      const startConnection = async () => { \r\n          try {\r\n                 await hubConnection.start()\r\n                 console.log('Connection successful!')\r\n               }\r\n          catch (err) {\r\n                 console.log(err);\r\n              }\r\n          hubConnection.on('ReceiveSum', (id, sum, name, date) => {\r\n                 setSum(sum);\r\n                 if(id === i){   \r\n                 var node = document.createElement(\"LI\");\r\n                 node.innerHTML=\"<b>\" +sum+ \" Ft</b> by \"+name+\" at \"+ stringFromDate(date);\r\n                 document.getElementById(\"sumlist\")?.appendChild(node);\r\n                 console.log(\"receive\");\r\n             }\r\n          });\r\n      };\r\n      startConnection();\r\n      return () => {\r\n        hubConnection.off('ReceiveSum');\r\n        hubConnection.stop();\r\n      }\r\n    },[]);\r\n\r\n    const handleSubmit= async ()=> {\r\n     if(sum>props.maxsum){\r\n      await axios.post('https://localhost:5001/api/bid', {\r\n          \"sum\": sum,\r\n          \"auctionid\": aucid,\r\n          \"personid\": userid,\r\n          \"personName\":username,\r\n          \"time\": now\r\n        },{ headers: authHeader() });\r\n        setIsError(false);\r\n      }\r\n      else\r\n      {\r\n          setIsError(true);\r\n          setError(\"Sum must be higher than actual price!\");\r\n      }\r\n    }\r\n    \r\n    if(authTokens)\r\n      return (\r\n          <Card>  \r\n              <br/>\r\n                <Form>\r\n                    <Form.Group className=\"text-center\">\r\n                      <Form.Label className=\"input-group-prepend text-center\">\r\n                        <Form.Control className=\"form-control\" type=\"number\" value={sum} onChange={(e: React.ChangeEvent<HTMLInputElement>)=>{ setSum(+e.currentTarget.value);}} />\r\n                          <Form.Text>Ft</Form.Text>\r\n                      </Form.Label>\r\n                      <Button className=\"btn\" onClick={handleSubmit}>Send bid</Button>\r\n                      {isError && <Form.Text className=\"text-danger\">{error}</Form.Text>}\r\n                    </Form.Group>\r\n                 </Form>\r\n                 <br/>\r\n                 <ul id=\"sumlist\">\r\n                        {\r\n                           data.map(item => (\r\n                              <li>\r\n                                  <b>{item.sum} Ft</b> by {item.personName} at {stringFromDate(item.time)} \r\n                              </li>\r\n                        ))}\r\n                  </ul>\r\n           </Card>\r\n       \r\n      );\r\n      else\r\n      {\r\n        return(\r\n          <div className=\"text-center\">You should <a href=\"/login\">sign in</a> before you can bid</div>\r\n        )\r\n      }\r\n      \r\n    }"]},"metadata":{},"sourceType":"module"}